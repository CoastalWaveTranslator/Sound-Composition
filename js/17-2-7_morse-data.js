// "use strict";

// var real = new Float32Array(2);
// var imag = new Float32Array(2);

// real[0] = 1;
// imag[0] = 1;
// real[1] = 1;
// imag[1] = 1;

var pi = 1;

var morseVal2 = 0;
var morseVal3 = 0;
var morse3Index = 1;
var morse2Index = 1;

// var seq = false;
var seq = true;

var refreshTime = 3 * 60 * 1000;

var AudioContext = window.AudioContext;
var lowCut;

var frameCount;
var myArrayBuffer;

var audioCtx;
var destination;

var currentPreset;
var noteLength;

var presetIncrement = 0;

var lookahead = 100;       // this is how frequently to check for notes that need to be scheduled
var scheduleTime = 0.75;   // schedule notes this far into the future (s)

// var osc1, osc2, osc3, osc4;
// var gn1, gn2, gn3, gn4;

// var mods = [];

// multiple any oscillators that are modulators by this factor
var modFactor = 24.0; // was set to 12.0 then 24.0

// var counter = 0;

var index = 1;

// first buoy text
// var text = '{"52403":[{"timestamp":"2016-12-19 03:00:00","height":"4439.304"},{"timestamp":"2016-12-19 02:45:00","height":"4439.265"},{"timestamp":"2016-12-19 02:30:00","height":"4439.224"},{"timestamp":"2016-12-19 02:15:00","height":"4439.181"},{"timestamp":"2016-12-19 02:00:00","height":"4439.142"},{"timestamp":"2016-12-19 01:45:00","height":"4439.1"},{"timestamp":"2016-12-19 01:30:00","height":"4439.058"},{"timestamp":"2016-12-19 01:15:00","height":"4439.016"},{"timestamp":"2016-12-19 01:00:00","height":"4438.978"},{"timestamp":"2016-12-19 00:45:00","height":"4438.943"},{"timestamp":"2016-12-19 00:30:00","height":"4438.904"},{"timestamp":"2016-12-19 00:15:00","height":"4438.872"},{"timestamp":"2016-12-19 00:00:00","height":"4438.842"},{"timestamp":"2016-12-18 23:45:00","height":"4438.816"},{"timestamp":"2016-12-18 23:30:00","height":"4438.794"},{"timestamp":"2016-12-18 23:15:00","height":"4438.78"},{"timestamp":"2016-12-18 23:00:00","height":"4438.764"},{"timestamp":"2016-12-18 22:45:00","height":"4438.753"},{"timestamp":"2016-12-18 22:30:00","height":"4438.747"},{"timestamp":"2016-12-18 22:15:00","height":"4438.745"},{"timestamp":"2016-12-18 22:00:00","height":"4438.749"},{"timestamp":"2016-12-18 21:45:00","height":"4438.756"},{"timestamp":"2016-12-18 21:30:00","height":"4438.767"},{"timestamp":"2016-12-18 21:15:00","height":"4438.783"},{"timestamp":"2016-12-18 21:00:00","height":"4438.799"},{"timestamp":"2016-12-18 20:45:00","height":"4438.819"},{"timestamp":"2016-12-18 20:30:00","height":"4438.839"},{"timestamp":"2016-12-18 20:15:00","height":"4438.868"},{"timestamp":"2016-12-18 20:00:00","height":"4438.898"},{"timestamp":"2016-12-18 19:45:00","height":"4438.927"},{"timestamp":"2016-12-18 19:30:00","height":"4438.959"},{"timestamp":"2016-12-18 19:15:00","height":"4438.997"},{"timestamp":"2016-12-18 19:00:00","height":"4439.032"},{"timestamp":"2016-12-18 18:45:00","height":"4439.069"},{"timestamp":"2016-12-18 18:30:00","height":"4439.105"},{"timestamp":"2016-12-18 18:15:00","height":"4439.137"},{"timestamp":"2016-12-18 18:00:00","height":"4439.169"},{"timestamp":"2016-12-18 17:45:00","height":"4439.202"},{"timestamp":"2016-12-18 17:30:00","height":"4439.232"},{"timestamp":"2016-12-18 17:15:00","height":"4439.261"},{"timestamp":"2016-12-18 17:00:00","height":"4439.283"},{"timestamp":"2016-12-18 16:45:00","height":"4439.307"},{"timestamp":"2016-12-18 16:30:00","height":"4439.328"},{"timestamp":"2016-12-18 16:15:00","height":"4439.345"},{"timestamp":"2016-12-18 16:00:00","height":"4439.355"},{"timestamp":"2016-12-18 15:45:00","height":"4439.364"},{"timestamp":"2016-12-18 15:30:00","height":"4439.372"},{"timestamp":"2016-12-18 15:15:00","height":"4439.378"},{"timestamp":"2016-12-18 15:00:00","height":"4439.375"},{"timestamp":"2016-12-18 14:45:00","height":"4439.373"},{"timestamp":"2016-12-18 14:30:00","height":"4439.371"},{"timestamp":"2016-12-18 14:15:00","height":"4439.366"},{"timestamp":"2016-12-18 14:00:00","height":"4439.36"},{"timestamp":"2016-12-18 13:45:00","height":"4439.351"},{"timestamp":"2016-12-18 13:30:00","height":"4439.34"},{"timestamp":"2016-12-18 13:15:00","height":"4439.326"},{"timestamp":"2016-12-18 13:00:00","height":"4439.316"},{"timestamp":"2016-12-18 12:45:00","height":"4439.309"},{"timestamp":"2016-12-18 12:30:00","height":"4439.299"},{"timestamp":"2016-12-18 12:15:00","height":"4439.291"},{"timestamp":"2016-12-18 12:00:00","height":"4439.285"},{"timestamp":"2016-12-18 11:45:00","height":"4439.279"},{"timestamp":"2016-12-18 11:30:00","height":"4439.272"},{"timestamp":"2016-12-18 11:15:00","height":"4439.269"},{"timestamp":"2016-12-18 11:00:00","height":"4439.272"},{"timestamp":"2016-12-18 10:45:00","height":"4439.273"},{"timestamp":"2016-12-18 10:30:00","height":"4439.281"},{"timestamp":"2016-12-18 10:15:00","height":"4439.287"},{"timestamp":"2016-12-18 10:00:00","height":"4439.296"},{"timestamp":"2016-12-18 09:45:00","height":"4439.312"},{"timestamp":"2016-12-18 09:30:00","height":"4439.327"},{"timestamp":"2016-12-18 09:15:00","height":"4439.34"},{"timestamp":"2016-12-18 09:00:00","height":"4439.357"},{"timestamp":"2016-12-18 08:45:00","height":"4439.372"},{"timestamp":"2016-12-18 08:30:00","height":"4439.388"},{"timestamp":"2016-12-18 08:15:00","height":"4439.403"},{"timestamp":"2016-12-18 08:00:00","height":"4439.421"},{"timestamp":"2016-12-18 07:45:00","height":"4439.438"},{"timestamp":"2016-12-18 07:30:00","height":"4439.452"},{"timestamp":"2016-12-18 07:15:00","height":"4439.471"},{"timestamp":"2016-12-18 07:00:00","height":"4439.487"},{"timestamp":"2016-12-18 06:45:00","height":"4439.499"},{"timestamp":"2016-12-18 06:30:00","height":"4439.513"},{"timestamp":"2016-12-18 06:15:00","height":"4439.526"},{"timestamp":"2016-12-18 06:00:00","height":"4439.533"},{"timestamp":"2016-12-18 05:45:00","height":"4439.538"},{"timestamp":"2016-12-18 05:30:00","height":"4439.542"},{"timestamp":"2016-12-18 05:15:00","height":"4439.54"},{"timestamp":"2016-12-18 05:00:00","height":"4439.538"},{"timestamp":"2016-12-18 04:45:00","height":"4439.531"},{"timestamp":"2016-12-18 04:30:00","height":"4439.521"},{"timestamp":"2016-12-18 04:15:00","height":"4439.508"},{"timestamp":"2016-12-18 04:00:00","height":"4439.492"},{"timestamp":"2016-12-18 03:45:00","height":"4439.468"},{"timestamp":"2016-12-18 03:30:00","height":"4439.441"},{"timestamp":"2016-12-18 03:15:00","height":"4439.41"},{"timestamp":"2016-12-18 03:00:00","height":"4439.376"},{"timestamp":"2016-12-18 02:45:00","height":"4439.338"},{"timestamp":"2016-12-18 02:30:00","height":"4439.301"},{"timestamp":"2016-12-18 02:15:00","height":"4439.261"}]}';

// full text
var text = '{"52403":[{"timestamp":"2016-12-19 03:00:00","height":"4439.304"},{"timestamp":"2016-12-19 02:45:00","height":"4439.265"},{"timestamp":"2016-12-19 02:30:00","height":"4439.224"},{"timestamp":"2016-12-19 02:15:00","height":"4439.181"},{"timestamp":"2016-12-19 02:00:00","height":"4439.142"},{"timestamp":"2016-12-19 01:45:00","height":"4439.1"},{"timestamp":"2016-12-19 01:30:00","height":"4439.058"},{"timestamp":"2016-12-19 01:15:00","height":"4439.016"},{"timestamp":"2016-12-19 01:00:00","height":"4438.978"},{"timestamp":"2016-12-19 00:45:00","height":"4438.943"},{"timestamp":"2016-12-19 00:30:00","height":"4438.904"},{"timestamp":"2016-12-19 00:15:00","height":"4438.872"},{"timestamp":"2016-12-19 00:00:00","height":"4438.842"},{"timestamp":"2016-12-18 23:45:00","height":"4438.816"},{"timestamp":"2016-12-18 23:30:00","height":"4438.794"},{"timestamp":"2016-12-18 23:15:00","height":"4438.78"},{"timestamp":"2016-12-18 23:00:00","height":"4438.764"},{"timestamp":"2016-12-18 22:45:00","height":"4438.753"},{"timestamp":"2016-12-18 22:30:00","height":"4438.747"},{"timestamp":"2016-12-18 22:15:00","height":"4438.745"},{"timestamp":"2016-12-18 22:00:00","height":"4438.749"},{"timestamp":"2016-12-18 21:45:00","height":"4438.756"},{"timestamp":"2016-12-18 21:30:00","height":"4438.767"},{"timestamp":"2016-12-18 21:15:00","height":"4438.783"},{"timestamp":"2016-12-18 21:00:00","height":"4438.799"},{"timestamp":"2016-12-18 20:45:00","height":"4438.819"},{"timestamp":"2016-12-18 20:30:00","height":"4438.839"},{"timestamp":"2016-12-18 20:15:00","height":"4438.868"},{"timestamp":"2016-12-18 20:00:00","height":"4438.898"},{"timestamp":"2016-12-18 19:45:00","height":"4438.927"},{"timestamp":"2016-12-18 19:30:00","height":"4438.959"},{"timestamp":"2016-12-18 19:15:00","height":"4438.997"},{"timestamp":"2016-12-18 19:00:00","height":"4439.032"},{"timestamp":"2016-12-18 18:45:00","height":"4439.069"},{"timestamp":"2016-12-18 18:30:00","height":"4439.105"},{"timestamp":"2016-12-18 18:15:00","height":"4439.137"},{"timestamp":"2016-12-18 18:00:00","height":"4439.169"},{"timestamp":"2016-12-18 17:45:00","height":"4439.202"},{"timestamp":"2016-12-18 17:30:00","height":"4439.232"},{"timestamp":"2016-12-18 17:15:00","height":"4439.261"},{"timestamp":"2016-12-18 17:00:00","height":"4439.283"},{"timestamp":"2016-12-18 16:45:00","height":"4439.307"},{"timestamp":"2016-12-18 16:30:00","height":"4439.328"},{"timestamp":"2016-12-18 16:15:00","height":"4439.345"},{"timestamp":"2016-12-18 16:00:00","height":"4439.355"},{"timestamp":"2016-12-18 15:45:00","height":"4439.364"},{"timestamp":"2016-12-18 15:30:00","height":"4439.372"},{"timestamp":"2016-12-18 15:15:00","height":"4439.378"},{"timestamp":"2016-12-18 15:00:00","height":"4439.375"},{"timestamp":"2016-12-18 14:45:00","height":"4439.373"},{"timestamp":"2016-12-18 14:30:00","height":"4439.371"},{"timestamp":"2016-12-18 14:15:00","height":"4439.366"},{"timestamp":"2016-12-18 14:00:00","height":"4439.36"},{"timestamp":"2016-12-18 13:45:00","height":"4439.351"},{"timestamp":"2016-12-18 13:30:00","height":"4439.34"},{"timestamp":"2016-12-18 13:15:00","height":"4439.326"},{"timestamp":"2016-12-18 13:00:00","height":"4439.316"},{"timestamp":"2016-12-18 12:45:00","height":"4439.309"},{"timestamp":"2016-12-18 12:30:00","height":"4439.299"},{"timestamp":"2016-12-18 12:15:00","height":"4439.291"},{"timestamp":"2016-12-18 12:00:00","height":"4439.285"},{"timestamp":"2016-12-18 11:45:00","height":"4439.279"},{"timestamp":"2016-12-18 11:30:00","height":"4439.272"},{"timestamp":"2016-12-18 11:15:00","height":"4439.269"},{"timestamp":"2016-12-18 11:00:00","height":"4439.272"},{"timestamp":"2016-12-18 10:45:00","height":"4439.273"},{"timestamp":"2016-12-18 10:30:00","height":"4439.281"},{"timestamp":"2016-12-18 10:15:00","height":"4439.287"},{"timestamp":"2016-12-18 10:00:00","height":"4439.296"},{"timestamp":"2016-12-18 09:45:00","height":"4439.312"},{"timestamp":"2016-12-18 09:30:00","height":"4439.327"},{"timestamp":"2016-12-18 09:15:00","height":"4439.34"},{"timestamp":"2016-12-18 09:00:00","height":"4439.357"},{"timestamp":"2016-12-18 08:45:00","height":"4439.372"},{"timestamp":"2016-12-18 08:30:00","height":"4439.388"},{"timestamp":"2016-12-18 08:15:00","height":"4439.403"},{"timestamp":"2016-12-18 08:00:00","height":"4439.421"},{"timestamp":"2016-12-18 07:45:00","height":"4439.438"},{"timestamp":"2016-12-18 07:30:00","height":"4439.452"},{"timestamp":"2016-12-18 07:15:00","height":"4439.471"},{"timestamp":"2016-12-18 07:00:00","height":"4439.487"},{"timestamp":"2016-12-18 06:45:00","height":"4439.499"},{"timestamp":"2016-12-18 06:30:00","height":"4439.513"},{"timestamp":"2016-12-18 06:15:00","height":"4439.526"},{"timestamp":"2016-12-18 06:00:00","height":"4439.533"},{"timestamp":"2016-12-18 05:45:00","height":"4439.538"},{"timestamp":"2016-12-18 05:30:00","height":"4439.542"},{"timestamp":"2016-12-18 05:15:00","height":"4439.54"},{"timestamp":"2016-12-18 05:00:00","height":"4439.538"},{"timestamp":"2016-12-18 04:45:00","height":"4439.531"},{"timestamp":"2016-12-18 04:30:00","height":"4439.521"},{"timestamp":"2016-12-18 04:15:00","height":"4439.508"},{"timestamp":"2016-12-18 04:00:00","height":"4439.492"},{"timestamp":"2016-12-18 03:45:00","height":"4439.468"},{"timestamp":"2016-12-18 03:30:00","height":"4439.441"},{"timestamp":"2016-12-18 03:15:00","height":"4439.41"},{"timestamp":"2016-12-18 03:00:00","height":"4439.376"},{"timestamp":"2016-12-18 02:45:00","height":"4439.338"},{"timestamp":"2016-12-18 02:30:00","height":"4439.301"},{"timestamp":"2016-12-18 02:15:00","height":"4439.261"}],"56001":[{"timestamp":"2016-12-19 02:00:00","height":"5652.462"},{"timestamp":"2016-12-19 01:45:00","height":"5652.471"},{"timestamp":"2016-12-19 01:30:00","height":"5652.489"},{"timestamp":"2016-12-19 01:15:00","height":"5652.517"},{"timestamp":"2016-12-19 01:00:00","height":"5652.554"},{"timestamp":"2016-12-19 00:45:00","height":"5652.604"},{"timestamp":"2016-12-19 00:30:00","height":"5652.661"},{"timestamp":"2016-12-19 00:15:00","height":"5652.725"},{"timestamp":"2016-12-19 00:00:00","height":"5652.796"},{"timestamp":"2016-12-18 23:45:00","height":"5652.878"},{"timestamp":"2016-12-18 23:30:00","height":"5652.964"},{"timestamp":"2016-12-18 23:15:00","height":"5653.056"},{"timestamp":"2016-12-18 23:00:00","height":"5653.15"},{"timestamp":"2016-12-18 22:45:00","height":"5653.246"},{"timestamp":"2016-12-18 22:30:00","height":"5653.342"},{"timestamp":"2016-12-18 22:15:00","height":"5653.438"},{"timestamp":"2016-12-18 22:00:00","height":"5653.53"},{"timestamp":"2016-12-18 21:45:00","height":"5653.618"},{"timestamp":"2016-12-18 21:30:00","height":"5653.699"},{"timestamp":"2016-12-18 21:15:00","height":"5653.776"},{"timestamp":"2016-12-18 21:00:00","height":"5653.845"},{"timestamp":"2016-12-18 20:45:00","height":"5653.907"},{"timestamp":"2016-12-18 20:30:00","height":"5653.959"},{"timestamp":"2016-12-18 20:15:00","height":"5654.002"},{"timestamp":"2016-12-18 20:00:00","height":"5654.037"},{"timestamp":"2016-12-18 19:45:00","height":"5654.063"},{"timestamp":"2016-12-18 19:30:00","height":"5654.079"},{"timestamp":"2016-12-18 19:15:00","height":"5654.083"},{"timestamp":"2016-12-18 19:00:00","height":"5654.076"},{"timestamp":"2016-12-18 18:45:00","height":"5654.06"},{"timestamp":"2016-12-18 18:30:00","height":"5654.031"},{"timestamp":"2016-12-18 18:15:00","height":"5653.997"},{"timestamp":"2016-12-18 18:00:00","height":"5653.951"},{"timestamp":"2016-12-18 17:45:00","height":"5653.9"},{"timestamp":"2016-12-18 17:30:00","height":"5653.836"},{"timestamp":"2016-12-18 17:15:00","height":"5653.767"},{"timestamp":"2016-12-18 17:00:00","height":"5653.696"},{"timestamp":"2016-12-18 16:45:00","height":"5653.62"},{"timestamp":"2016-12-18 16:30:00","height":"5653.541"},{"timestamp":"2016-12-18 16:15:00","height":"5653.463"},{"timestamp":"2016-12-18 16:00:00","height":"5653.381"},{"timestamp":"2016-12-18 15:45:00","height":"5653.301"},{"timestamp":"2016-12-18 15:30:00","height":"5653.226"},{"timestamp":"2016-12-18 15:15:00","height":"5653.156"},{"timestamp":"2016-12-18 15:00:00","height":"5653.087"},{"timestamp":"2016-12-18 14:45:00","height":"5653.025"},{"timestamp":"2016-12-18 14:30:00","height":"5652.972"},{"timestamp":"2016-12-18 14:15:00","height":"5652.927"},{"timestamp":"2016-12-18 14:00:00","height":"5652.888"},{"timestamp":"2016-12-18 13:45:00","height":"5652.862"},{"timestamp":"2016-12-18 13:30:00","height":"5652.845"},{"timestamp":"2016-12-18 13:15:00","height":"5652.835"},{"timestamp":"2016-12-18 11:00:00","height":"5653.151"},{"timestamp":"2016-12-18 10:45:00","height":"5653.217"},{"timestamp":"2016-12-18 10:30:00","height":"5653.284"},{"timestamp":"2016-12-18 10:15:00","height":"5653.357"},{"timestamp":"2016-12-18 10:00:00","height":"5653.428"},{"timestamp":"2016-12-18 09:45:00","height":"5653.493"},{"timestamp":"2016-12-18 09:30:00","height":"5653.557"},{"timestamp":"2016-12-18 09:15:00","height":"5653.618"},{"timestamp":"2016-12-18 09:00:00","height":"5653.673"},{"timestamp":"2016-12-18 08:45:00","height":"5653.72"},{"timestamp":"2016-12-18 08:30:00","height":"5653.76"},{"timestamp":"2016-12-18 08:15:00","height":"5653.792"},{"timestamp":"2016-12-18 08:00:00","height":"5653.815"},{"timestamp":"2016-12-18 07:45:00","height":"5653.826"},{"timestamp":"2016-12-18 07:30:00","height":"5653.824"},{"timestamp":"2016-12-18 07:15:00","height":"5653.818"},{"timestamp":"2016-12-18 07:00:00","height":"5653.799"},{"timestamp":"2016-12-18 06:45:00","height":"5653.767"},{"timestamp":"2016-12-18 06:30:00","height":"5653.728"},{"timestamp":"2016-12-18 06:15:00","height":"5653.678"},{"timestamp":"2016-12-18 06:00:00","height":"5653.619"},{"timestamp":"2016-12-18 05:45:00","height":"5653.551"},{"timestamp":"2016-12-18 05:30:00","height":"5653.478"},{"timestamp":"2016-12-18 05:15:00","height":"5653.395"},{"timestamp":"2016-12-18 05:00:00","height":"5653.309"},{"timestamp":"2016-12-18 04:45:00","height":"5653.219"},{"timestamp":"2016-12-18 04:30:00","height":"5653.128"},{"timestamp":"2016-12-18 04:15:00","height":"5653.034"},{"timestamp":"2016-12-18 04:00:00","height":"5652.937"},{"timestamp":"2016-12-18 03:45:00","height":"5652.846"},{"timestamp":"2016-12-18 03:30:00","height":"5652.757"},{"timestamp":"2016-12-18 03:15:00","height":"5652.677"},{"timestamp":"2016-12-18 03:00:00","height":"5652.6"},{"timestamp":"2016-12-18 02:45:00","height":"5652.533"},{"timestamp":"2016-12-18 02:30:00","height":"5652.476"},{"timestamp":"2016-12-18 02:15:00","height":"5652.427"},{"timestamp":"2016-12-18 02:00:00","height":"5652.39"},{"timestamp":"2016-12-18 01:45:00","height":"5652.367"},{"timestamp":"2016-12-18 01:30:00","height":"5652.355"},{"timestamp":"2016-12-18 01:15:00","height":"5652.354"},{"timestamp":"2016-12-18 01:00:00","height":"5652.366"},{"timestamp":"2016-12-18 00:45:00","height":"5652.393"},{"timestamp":"2016-12-18 00:30:00","height":"5652.431"},{"timestamp":"2016-12-18 00:15:00","height":"5652.481"},{"timestamp":"2016-12-18 00:00:00","height":"5652.54"},{"timestamp":"2016-12-17 23:45:00","height":"5652.61"},{"timestamp":"2016-12-17 23:30:00","height":"5652.688"},{"timestamp":"2016-12-17 23:15:00","height":"5652.777"}],"52406":[{"timestamp":"2016-12-19 03:00:00","height":"1764.013"},{"timestamp":"2016-12-19 02:45:00","height":"1764.052"},{"timestamp":"2016-12-19 02:30:00","height":"1764.092"},{"timestamp":"2016-12-19 02:15:00","height":"1764.133"},{"timestamp":"2016-12-19 02:00:00","height":"1764.176"},{"timestamp":"2016-12-19 01:45:00","height":"1764.216"},{"timestamp":"2016-12-19 01:30:00","height":"1764.258"},{"timestamp":"2016-12-19 01:15:00","height":"1764.293"},{"timestamp":"2016-12-19 01:00:00","height":"1764.319"},{"timestamp":"2016-12-19 00:45:00","height":"1764.347"},{"timestamp":"2016-12-19 00:30:00","height":"1764.366"},{"timestamp":"2016-12-19 00:15:00","height":"1764.382"},{"timestamp":"2016-12-19 00:00:00","height":"1764.398"},{"timestamp":"2016-12-18 23:45:00","height":"1764.404"},{"timestamp":"2016-12-18 23:30:00","height":"1764.4"},{"timestamp":"2016-12-18 23:15:00","height":"1764.391"},{"timestamp":"2016-12-18 23:00:00","height":"1764.372"},{"timestamp":"2016-12-18 22:45:00","height":"1764.349"},{"timestamp":"2016-12-18 22:30:00","height":"1764.317"},{"timestamp":"2016-12-18 22:15:00","height":"1764.281"},{"timestamp":"2016-12-18 22:00:00","height":"1764.242"},{"timestamp":"2016-12-18 21:45:00","height":"1764.194"},{"timestamp":"2016-12-18 21:30:00","height":"1764.144"},{"timestamp":"2016-12-18 21:15:00","height":"1764.092"},{"timestamp":"2016-12-18 21:00:00","height":"1764.038"},{"timestamp":"2016-12-18 20:45:00","height":"1763.978"},{"timestamp":"2016-12-18 20:30:00","height":"1763.922"},{"timestamp":"2016-12-18 20:15:00","height":"1763.865"},{"timestamp":"2016-12-18 20:00:00","height":"1763.808"},{"timestamp":"2016-12-18 19:45:00","height":"1763.756"},{"timestamp":"2016-12-18 19:30:00","height":"1763.705"},{"timestamp":"2016-12-18 19:15:00","height":"1763.66"},{"timestamp":"2016-12-18 19:00:00","height":"1763.617"},{"timestamp":"2016-12-18 18:45:00","height":"1763.58"},{"timestamp":"2016-12-18 18:30:00","height":"1763.541"},{"timestamp":"2016-12-18 18:15:00","height":"1763.512"},{"timestamp":"2016-12-18 18:00:00","height":"1763.492"},{"timestamp":"2016-12-18 17:45:00","height":"1763.476"},{"timestamp":"2016-12-18 17:30:00","height":"1763.474"},{"timestamp":"2016-12-18 17:15:00","height":"1763.479"},{"timestamp":"2016-12-18 17:00:00","height":"1763.49"},{"timestamp":"2016-12-18 16:45:00","height":"1763.5"},{"timestamp":"2016-12-18 16:30:00","height":"1763.522"},{"timestamp":"2016-12-18 16:15:00","height":"1763.558"},{"timestamp":"2016-12-18 16:00:00","height":"1763.6"},{"timestamp":"2016-12-18 15:45:00","height":"1763.645"},{"timestamp":"2016-12-18 15:30:00","height":"1763.697"},{"timestamp":"2016-12-18 15:15:00","height":"1763.757"},{"timestamp":"2016-12-18 15:00:00","height":"1763.824"},{"timestamp":"2016-12-18 14:45:00","height":"1763.893"},{"timestamp":"2016-12-18 14:30:00","height":"1763.967"},{"timestamp":"2016-12-18 14:15:00","height":"1764.04"},{"timestamp":"2016-12-18 14:00:00","height":"1764.117"},{"timestamp":"2016-12-18 13:45:00","height":"1764.196"},{"timestamp":"2016-12-18 13:30:00","height":"1764.269"},{"timestamp":"2016-12-18 13:15:00","height":"1764.347"},{"timestamp":"2016-12-18 13:00:00","height":"1764.42"},{"timestamp":"2016-12-18 12:45:00","height":"1764.488"},{"timestamp":"2016-12-18 12:30:00","height":"1764.548"},{"timestamp":"2016-12-18 12:15:00","height":"1764.616"},{"timestamp":"2016-12-18 12:00:00","height":"1764.666"},{"timestamp":"2016-12-18 11:45:00","height":"1764.712"},{"timestamp":"2016-12-18 11:30:00","height":"1764.748"},{"timestamp":"2016-12-18 11:15:00","height":"1764.781"},{"timestamp":"2016-12-18 11:00:00","height":"1764.799"},{"timestamp":"2016-12-18 10:45:00","height":"1764.81"},{"timestamp":"2016-12-18 10:30:00","height":"1764.812"},{"timestamp":"2016-12-18 10:15:00","height":"1764.801"},{"timestamp":"2016-12-18 10:00:00","height":"1764.779"},{"timestamp":"2016-12-18 09:45:00","height":"1764.749"},{"timestamp":"2016-12-18 09:30:00","height":"1764.71"},{"timestamp":"2016-12-18 09:15:00","height":"1764.66"},{"timestamp":"2016-12-18 09:00:00","height":"1764.608"},{"timestamp":"2016-12-18 08:45:00","height":"1764.55"},{"timestamp":"2016-12-18 08:30:00","height":"1764.488"},{"timestamp":"2016-12-18 08:15:00","height":"1764.423"},{"timestamp":"2016-12-18 08:00:00","height":"1764.351"},{"timestamp":"2016-12-18 07:45:00","height":"1764.28"},{"timestamp":"2016-12-18 07:30:00","height":"1764.209"},{"timestamp":"2016-12-18 07:15:00","height":"1764.148"},{"timestamp":"2016-12-18 07:00:00","height":"1764.077"},{"timestamp":"2016-12-18 06:45:00","height":"1764.011"},{"timestamp":"2016-12-18 06:30:00","height":"1763.948"},{"timestamp":"2016-12-18 06:15:00","height":"1763.895"},{"timestamp":"2016-12-18 06:00:00","height":"1763.844"},{"timestamp":"2016-12-18 05:45:00","height":"1763.802"},{"timestamp":"2016-12-18 05:30:00","height":"1763.769"},{"timestamp":"2016-12-18 05:15:00","height":"1763.739"},{"timestamp":"2016-12-18 05:00:00","height":"1763.713"},{"timestamp":"2016-12-18 04:45:00","height":"1763.696"},{"timestamp":"2016-12-18 04:30:00","height":"1763.689"},{"timestamp":"2016-12-18 04:15:00","height":"1763.691"},{"timestamp":"2016-12-18 04:00:00","height":"1763.699"},{"timestamp":"2016-12-18 03:45:00","height":"1763.715"},{"timestamp":"2016-12-18 03:30:00","height":"1763.735"},{"timestamp":"2016-12-18 03:15:00","height":"1763.751"},{"timestamp":"2016-12-18 03:00:00","height":"1763.793"},{"timestamp":"2016-12-18 02:45:00","height":"1763.839"},{"timestamp":"2016-12-18 02:30:00","height":"1763.887"},{"timestamp":"2016-12-18 02:15:00","height":"1763.937"}],"51425":[{"timestamp":"2016-12-19 03:00:00","height":"1764.013"},{"timestamp":"2016-12-19 02:45:00","height":"1764.052"},{"timestamp":"2016-12-19 02:30:00","height":"1764.092"},{"timestamp":"2016-12-19 02:15:00","height":"1764.133"},{"timestamp":"2016-12-19 02:00:00","height":"1764.176"},{"timestamp":"2016-12-19 01:45:00","height":"1764.216"},{"timestamp":"2016-12-19 01:30:00","height":"1764.258"},{"timestamp":"2016-12-19 01:15:00","height":"1764.293"},{"timestamp":"2016-12-19 01:00:00","height":"1764.319"},{"timestamp":"2016-12-19 00:45:00","height":"1764.347"},{"timestamp":"2016-12-19 00:30:00","height":"1764.366"},{"timestamp":"2016-12-19 00:15:00","height":"1764.382"},{"timestamp":"2016-12-19 00:00:00","height":"1764.398"},{"timestamp":"2016-12-18 23:45:00","height":"1764.404"},{"timestamp":"2016-12-18 23:30:00","height":"1764.4"},{"timestamp":"2016-12-18 23:15:00","height":"1764.391"},{"timestamp":"2016-12-18 23:00:00","height":"1764.372"},{"timestamp":"2016-12-18 22:45:00","height":"1764.349"},{"timestamp":"2016-12-18 22:30:00","height":"1764.317"},{"timestamp":"2016-12-18 22:15:00","height":"1764.281"},{"timestamp":"2016-12-18 22:00:00","height":"1764.242"},{"timestamp":"2016-12-18 21:45:00","height":"1764.194"},{"timestamp":"2016-12-18 21:30:00","height":"1764.144"},{"timestamp":"2016-12-18 21:15:00","height":"1764.092"},{"timestamp":"2016-12-18 21:00:00","height":"1764.038"},{"timestamp":"2016-12-18 20:45:00","height":"1763.978"},{"timestamp":"2016-12-18 20:30:00","height":"1763.922"},{"timestamp":"2016-12-18 20:15:00","height":"1763.865"},{"timestamp":"2016-12-18 20:00:00","height":"1763.808"},{"timestamp":"2016-12-18 19:45:00","height":"1763.756"},{"timestamp":"2016-12-18 19:30:00","height":"1763.705"},{"timestamp":"2016-12-18 19:15:00","height":"1763.66"},{"timestamp":"2016-12-18 19:00:00","height":"1763.617"},{"timestamp":"2016-12-18 18:45:00","height":"1763.58"},{"timestamp":"2016-12-18 18:30:00","height":"1763.541"},{"timestamp":"2016-12-18 18:15:00","height":"1763.512"},{"timestamp":"2016-12-18 18:00:00","height":"1763.492"},{"timestamp":"2016-12-18 17:45:00","height":"1763.476"},{"timestamp":"2016-12-18 17:30:00","height":"1763.474"},{"timestamp":"2016-12-18 17:15:00","height":"1763.479"},{"timestamp":"2016-12-18 17:00:00","height":"1763.49"},{"timestamp":"2016-12-18 16:45:00","height":"1763.5"},{"timestamp":"2016-12-18 16:30:00","height":"1763.522"},{"timestamp":"2016-12-18 16:15:00","height":"1763.558"},{"timestamp":"2016-12-18 16:00:00","height":"1763.6"},{"timestamp":"2016-12-18 15:45:00","height":"1763.645"},{"timestamp":"2016-12-18 15:30:00","height":"1763.697"},{"timestamp":"2016-12-18 15:15:00","height":"1763.757"},{"timestamp":"2016-12-18 15:00:00","height":"1763.824"},{"timestamp":"2016-12-18 14:45:00","height":"1763.893"},{"timestamp":"2016-12-18 14:30:00","height":"1763.967"},{"timestamp":"2016-12-18 14:15:00","height":"1764.04"},{"timestamp":"2016-12-18 14:00:00","height":"1764.117"},{"timestamp":"2016-12-18 13:45:00","height":"1764.196"},{"timestamp":"2016-12-18 13:30:00","height":"1764.269"},{"timestamp":"2016-12-18 13:15:00","height":"1764.347"},{"timestamp":"2016-12-18 13:00:00","height":"1764.42"},{"timestamp":"2016-12-18 12:45:00","height":"1764.488"},{"timestamp":"2016-12-18 12:30:00","height":"1764.548"},{"timestamp":"2016-12-18 12:15:00","height":"1764.616"},{"timestamp":"2016-12-18 12:00:00","height":"1764.666"},{"timestamp":"2016-12-18 11:45:00","height":"1764.712"},{"timestamp":"2016-12-18 11:30:00","height":"1764.748"},{"timestamp":"2016-12-18 11:15:00","height":"1764.781"},{"timestamp":"2016-12-18 11:00:00","height":"1764.799"},{"timestamp":"2016-12-18 10:45:00","height":"1764.81"},{"timestamp":"2016-12-18 10:30:00","height":"1764.812"},{"timestamp":"2016-12-18 10:15:00","height":"1764.801"},{"timestamp":"2016-12-18 10:00:00","height":"1764.779"},{"timestamp":"2016-12-18 09:45:00","height":"1764.749"},{"timestamp":"2016-12-18 09:30:00","height":"1764.71"},{"timestamp":"2016-12-18 09:15:00","height":"1764.66"},{"timestamp":"2016-12-18 09:00:00","height":"1764.608"},{"timestamp":"2016-12-18 08:45:00","height":"1764.55"},{"timestamp":"2016-12-18 08:30:00","height":"1764.488"},{"timestamp":"2016-12-18 08:15:00","height":"1764.423"},{"timestamp":"2016-12-18 08:00:00","height":"1764.351"},{"timestamp":"2016-12-18 07:45:00","height":"1764.28"},{"timestamp":"2016-12-18 07:30:00","height":"1764.209"},{"timestamp":"2016-12-18 07:15:00","height":"1764.148"},{"timestamp":"2016-12-18 07:00:00","height":"1764.077"},{"timestamp":"2016-12-18 06:45:00","height":"1764.011"},{"timestamp":"2016-12-18 06:30:00","height":"1763.948"},{"timestamp":"2016-12-18 06:15:00","height":"1763.895"},{"timestamp":"2016-12-18 06:00:00","height":"1763.844"},{"timestamp":"2016-12-18 05:45:00","height":"1763.802"},{"timestamp":"2016-12-18 05:30:00","height":"1763.769"},{"timestamp":"2016-12-18 05:15:00","height":"1763.739"},{"timestamp":"2016-12-18 05:00:00","height":"1763.713"},{"timestamp":"2016-12-18 04:45:00","height":"1763.696"},{"timestamp":"2016-12-18 04:30:00","height":"1763.689"},{"timestamp":"2016-12-18 04:15:00","height":"1763.691"},{"timestamp":"2016-12-18 04:00:00","height":"1763.699"},{"timestamp":"2016-12-18 03:45:00","height":"1763.715"},{"timestamp":"2016-12-18 03:30:00","height":"1763.735"},{"timestamp":"2016-12-18 03:15:00","height":"1763.751"},{"timestamp":"2016-12-18 03:00:00","height":"1763.793"},{"timestamp":"2016-12-18 02:45:00","height":"1763.839"},{"timestamp":"2016-12-18 02:30:00","height":"1763.887"},{"timestamp":"2016-12-18 02:15:00","height":"1763.937"}]}';

// var newData = getData();

// only first 20 items of first buoy
// var text = '{"52403":[{"timestamp":"2016-12-19 03:00:00","height":"4439.304"},{"timestamp":"2016-12-19 02:45:00","height":"4439.265"},{"timestamp":"2016-12-19 02:30:00","height":"4439.224"},{"timestamp":"2016-12-19 02:15:00","height":"4439.181"},{"timestamp":"2016-12-19 02:00:00","height":"4439.142"},{"timestamp":"2016-12-19 01:45:00","height":"4439.1"},{"timestamp":"2016-12-19 01:30:00","height":"4439.058"},{"timestamp":"2016-12-19 01:15:00","height":"4439.016"},{"timestamp":"2016-12-19 01:00:00","height":"4438.978"},{"timestamp":"2016-12-19 00:45:00","height":"4438.943"},{"timestamp":"2016-12-19 00:30:00","height":"4438.904"},{"timestamp":"2016-12-19 00:15:00","height":"4438.872"},{"timestamp":"2016-12-19 00:00:00","height":"4438.842"},{"timestamp":"2016-12-18 23:45:00","height":"4438.816"},{"timestamp":"2016-12-18 23:30:00","height":"4438.794"},{"timestamp":"2016-12-18 23:15:00","height":"4438.78"},{"timestamp":"2016-12-18 23:00:00","height":"4438.764"},{"timestamp":"2016-12-18 22:45:00","height":"4438.753"},{"timestamp":"2016-12-18 22:30:00","height":"4438.747"},{"timestamp":"2016-12-18 22:15:00","height":"4438.745"}]}';

/* =================================================
       variables for morse
================================================== */
var morseobj = '{"letters":[{ "A": ".-","B": "-...","C": "-.-.","D": "-..","E": ".", "F": "..-.","G": "--.","H": "....","I": "..","J": ".---","K": "-.-","L": ".-..","M": "--","N": "-.","O": "---","P": ".--.","Q": "--.-","R": ".-.","S": "...","T": "-","U": "..-","V": "...-","W": ".--","X": "-..-","Y": "-.--","Z": "--..","1": ".----","2": "..---","3": "...--","4": "....-","5": ".....","6": "-....","7": "--...","8": "---..","9": "----.","0": "-----"}],"numbers":[{"1": ".-","2": "-...","3": "-.-.","4": "-..","5": ".","6": "..-.","7": "--.","8": "....","9": "..","10": ".---","11": "-.-","12": ".-..","13": "--","14": "-.","15": "---","16": ".--.","17": "--.-","18": ".-.","19": "...","20": "-","21": "..-","22": "...-","23": ".--","24": "-..-","25": "-.--","26": "--..","27": ".----","28": "..---","29": "...--","30": "....-","31": ".....","32": "-....","33": "--...","34": "---..","35": "----.","36": "-----"}]}';

var morse = JSON.parse(morseobj);
var numbers = "numbers";
var letters = "letters";

/* =================================================
       variables for buoy
================================================== */
var obj = JSON.parse(text);
var buoys = [52403, 56001, 52406, 51425];
// var buoynames = ["[Manus Island]", "[Christmas Island]", "[Nauru Island]", "[Tuvalu Island]"]
// var buoyname1 = "[Manus Island]";
var datacount =  obj[buoys[0]].length;
var height = "height";
var i = 0;

var buoyheights1 = null;
var buoyheights2 = null;
var buoyheights3 = null;
var buoyheights4 = null;
//console.log(obj[buoys[0]][i]["height"]);
      
/* =================================================
    variables for wave height differentials
================================================== */

var maxVal = 0,
    minVal = 0,
    dif = 0,
    absDif = 0,
    sumDif = 0,
    avgDif = 0,
    i=1,
    t=0;

/* =================================================
    presets for sound synthesis
================================================== */

// eerie long tones

window.pre = {  
  oscs : [ 
    osc1 = {
      m: 0,
      t: "sine",
      f: 400,
      fm: 0.0,
      g: 0.9,
      gm: 0.0,
      i: 0.0,
      a: 0.272,
      d: 11.6,
      s: 1.0,
      r: 10.0 // was 24
    },
    osc2 = {
      m: 1,
      t: "sine",
      f: 700,
      fm: 0.5,
      g: decToLin(0), // was -19
      gm: 0.25,
      i: 1.0,
      a: 0.5, //3.98
      d: 4.66,
      s: 0.8,
      r: 10.0
    },
    osc3 = {
      m: 1,
      t: "sine",
      f: 41,
      fm: 1.0,
      g: decToLin(-12), // was -18
      gm: 0.2,
      i: 0.0,
      a: 0.272,
      d: 11.16,
      s: 1.0,
      r: 6.0
    },
    osc4 = {
      m: 1,
      t: "sine",
      f: 1300,
      fm: 0.0,
      g: decToLin(-3), // was -5.3
      gm: 0.2,
      i: 0.0,
      a: 0.001,
      d: 1.2,
      s: 1.0,
      r: 0.05
    }
  ],
  global : {
    gtime : 1.0, // 8 is equivalent to +100% in operator
    transposition : 0,
    routing : [ 0, 1, 2, 3 ],
    durationFactor : 300,
    kick : 0,
    morseVal2 : 0.0
  },    
  pitchEnv : {
    connections : [ 1, 0, 0, 0 ],
    ramp : [
      [0, 2.5],
      [12, 12.6],
      [6, 8.66]
    ],
    semitones : 3
  }
}

window.longTonesNoPitchEnv = {  
  oscs : [ 
    osc1 = {
      m: 0,
      t: "sine",
      f: 400,
      fm: 1.0,
      g: 0.9,
      gm: 0.0,
      i: 0.0,
      a: 0.272,
      d: 11.6,
      s: 1.0,
      r: 12.0 // was 24
    },
    osc2 = {
      m: 1,
      t: "sine",
      f: 700,
      fm: 0.0,
      g: decToLin(0), // was -19
      gm: 0.25,
      i: 1.0,
      a: 0.9, //3.98
      d: 4.66,
      s: 0.8,
      r: 12.0
    },
    osc3 = {
      m: 1,
      t: "sine",
      f: 41,
      fm: 0.0,
      g: decToLin(-12), // was -18
      gm: 0.4,
      i: 0.0,
      a: 0.272,
      d: 11.16,
      s: 1.0,
      r: 12.0
    },
    osc4 = {
      m: 1,
      t: "sine",
      f: 1300,
      fm: 0.0,
      g: decToLin(-3), // was -5.3
      gm: 1.0,
      i: 0.0,
      a: 0.001,
      d: 1.2,
      s: 1.0,
      r: 0.05
    }
  ],
  global : {
    gtime : 2.0, // 8 is equivalent to +100% in operator
    transposition : 0,
    routing : [ 0, 1, 2, 3 ],
    durationFactor : 800,
    kick : 0,
    morseVal2 : 0.0
  },    
  pitchEnv : {
    connections : [ 0, 0, 0, 0 ],
    ramp : [
      [0, 2.5],
      [12, 12.6],
      [6, 8.66]
    ],
    semitones : 3
  }
}

// PRESET FOR TESTING
// short fm tone

window.testPre = {
  oscs : [
    osc1 = {
      m: 0,
      t: "sine",
      f: 500,
      fm: 0.1,
      i: 0.0,
      g: 1.0,
      gm: 0.0,
      a: 0.001, // or 0.001
      d: 1.0,
      s: 1.0,
      r: 0.001
    },
    osc2 = {
      m: 1,
      t: "sine",
      f: 625,
      fm: 0.3,
      i: 0.0,
      g: 1.0,
      gm: 0.0,
      a: 0.001,
      d: 1.0,
      s: 1.0,
      r: 0.001
    },
    osc3 = {
      m: 1,
      t: "sine",
      f: 800,
      fm: 0.5,
      i: 0.0,
      g: decToLin(-12),
      gm: 0.0,
      a: 0.001,
      d: 1.0,
      s: 1.0,
      r: 0.001
    },
    osc4 = {
      m: 0,
      t: "sine",
      f: 1300,
      fm: 0.0,
      i: 1.0,
      g: decToLin(-5.3),
      gm: 0.0,
      a: 0.1,
      d: 1.2,
      s: 1.0,
      r: 0.05
    },    
  ],
  global : {
    gtime: 1.0,
    transposition: 0,
    routing : [ 0, 1, 2, 3 ],
    durationFactor : 0.5,
    kick : 0,
    morseVal2 : 0.0
  },
  pitchEnv : {
    connections : [ 0, 0, 0, 0 ],
    ramp : [
      [0, 2.5],
      [12, 12.6],
      [6, 8.66]
    ],
    semitones : 3
  }
}

// PRESET FOR LOW FM SYNTH

window.lowFmPre = {
  oscs : [
    osc1 = {
      m: 0,
      t: "sine",
      f: 80, // was 80
      fm: 0.0,
      g: 1.0,
      gm: 0.0,
      i: 0.0,
      a: 0.0016, // 0.0016
      d: 0.315, // 0.315
      s: 1.0,
      r: 0.001 // 0.00396
    },
    osc2 = {
      m: 1,
      t: "sine",
      f: 160, // was 0.1
      fm: 1.0,
      g: decToLin(-6), // was decToLin(-23)
      gm: 0.0,
      i: 1.0,
      a: 0.136, // was 0.136
      d: 0.458, // was 0.458
      s: 1.0,
      r: 0.012
    },
    osc3 = {
      m: 1,
      t: "sine",
      f: 784, //261.63 * 3, // midi note 60 = C4 = 261.63 Hz
      fm: 0.2,
      g: decToLin(-12),
      gm: 0.5,
      i: 0.0,
      a: 0.2, // 1.00106
      d: 0.3,
      s: 0.5,
      r: 0.05
    },
    osc4 = {
      m: 1,
      t: "sine",
      f: 261.63,
      fm: 0.0,
      g: decToLin(-24),
      gm: -0.8,
      i: 0.0,
      a: 2.0,
      d: 0.116,
      s: 0.7,
      r: 0.05
    }
  ],
  global : {
    gtime : 0.5, // 8 is equivalent to +100% in operator
    transposition : 13,
    routing : [ 0, 1, 2, 3 ],
    durationFactor : 1,
    kick : 1,
    morseVal2 : 0.0
  },
  pitchEnv : {
    connections : [ 1, 1, 0, 0 ],
    ramp : [
      [-12, 0.01],
      [1, 3.83],
      [0, 0.1]
    ],
    semitones : 12
  }
}

window.lowFmPreOneOsc = {
  oscs : [
    osc1 = {
      m: 0,
      t: "sine",
      f: 80, // was 80
      fm: 0.0,
      g: 1.0,
      gm: 0.0,
      i: 0.0,
      a: 0.0016, // 0.0016
      d: 0.315, // 0.315
      s: 1.0,
      r: 0.01 // 0.00396
    },
    osc2 = {
      m: 1,
      t: "sine",
      f: 160, // was 0.1
      fm: 0.0,
      g: 0.0, // was decToLin(-23)
      gm: 0.0,
      i: 0.0,
      a: 0.136, // was 0.136
      d: 0.458, // was 0.458
      s: 1.0,
      r: 0.012
    },
    osc3 = {
      m: 1,
      t: "sine",
      f: 784, //261.63 * 3, // midi note 60 = C4 = 261.63 Hz
      fm: 0.0,
      g: 0.0,
      gm: 0.0,
      i: 0.0,
      a: 0.2, // 1.00106
      d: 0.3,
      s: 0.5,
      r: 0.05
    },
    osc4 = {
      m: 1,
      t: "sine",
      f: 261.63,
      fm: 0.0,
      g: 0.0,
      gm: 0.0,
      i: 0.0,
      a: 2.0,
      d: 0.116,
      s: 0.7,
      r: 0.05
    }
  ],
  global : {
    gtime : 1.0, // 8 is equivalent to +100% in operator
    transposition : 13,
    routing : [ 0, 1, 2, 3 ],
    durationFactor : 1,
    kick : 1,
    morseVal2 : 0.0
  },
  pitchEnv : {
    connections : [ 1, 0, 0, 0 ],
    ramp : [
      [-24, 0.01],
      [1, 3.83],
      [0, 0.1]
    ],
    semitones : 12
  }
}

// could make function to test correctness of presets errgh

window.kickPre = {
  oscs : [
    osc1 = {
      m: 0,
      t: "sine",
      f: 80,
      fm: 0.0,
      i: 0,
      g: 1,
      gm: 0.0,
      a: 0.01,
      d: 0.3,
      s: 0,
      r: 0.001
    },
    osc2 = {
      m: 1,
      t: "sine",
      f: 120,
      fm: 0.0,
      i: 0,
      g: decToLin(-3),
      gm: 0.0,
      a: 0.00001,
      d: 0.02,
      s: 0,
      r: 0.05
    },
    osc3 = {
      m: 0,
      t: "sine",
      f: 80,
      fm: 0.0,
      i: 0.0,
      g: 0.0,
      gm: 0.0,
      a: 0.01,
      d: 0.3,
      s: 0,
      r: 0.001
    },
    osc4 = {
      m: 0,
      t: "sine",
      f: 120,
      fm: 0.0,
      i: 0.0,
      g: 0.0,
      gm: 0.0,
      a: 0.00001,
      d: 0.02,
      s: 0,
      r: 0.05
    }
  ],
  global : {
    gtime: 1,
    transposition: -12,
    routing : [ 0, 1, 0, 0 ],
    durationFactor : 0.5,
    kick : 1,
    morseVal2 : 0.0
  },
  pitchEnv : {
    connections : [ 0, 0, 0, 0 ],
    ramp : [
      [-24, 0.01],
      [1, 3.83],
      [0, 0.1]
    ],
    semitones : 12
  }
}

window.silence = {
  oscs : [
    osc1 = {
      m: 0,
      t: "sine",
      f: 80,
      fm: 0.0,
      i: 0,
      g: 0,
      gm: 0.0,
      a: 0.01,
      d: 0.3,
      s: 0,
      r: 0.001
    },
    osc2 = {
      m: 1,
      t: "sine",
      f: 120,
      fm: 0.0,
      i: 0,
      g: 0,
      gm: 0.0,
      a: 0.00001,
      d: 0.02,
      s: 0,
      r: 0.05
    },
    osc3 = {
      m: 1,
      t: "sine",
      f: 80,
      fm: 0.0,
      i: 0.0,
      g: 0.0,
      gm: 0.0,
      a: 0.01,
      d: 0.3,
      s: 0,
      r: 0.001
    },
    osc4 = {
      m: 1,
      t: "sine",
      f: 120,
      fm: 0.0,
      i: 0.0,
      g: 0.0,
      gm: 0.0,
      a: 0.00001,
      d: 0.02,
      s: 0,
      r: 0.05
    }
  ],
  global : {
    gtime: 1,
    transposition: 0,
    routing : [ 0, 1, 2, 3 ],
    durationFactor : 0.5,
    kick : 1,
    morseVal2 : 0.0
  },
  pitchEnv : {
    connections : [ 0, 0, 0, 0 ],
    ramp : [
      [-24, 0.01],
      [1, 3.83],
      [0, 0.1]
    ],
    semitones : 12
  }
}

window.hiFmPre = {
  oscs : [
    osc1 = {
      m: 0,
      t: "sine",
      f: 80,
      fm: 0.0,
      i: 0,
      g: 1.0,
      gm: 0.0,
      a: 0.016,
      d: 0.315,
      s: 1,
      r: 0.004
    },
    osc2 = {
      m: 1,
      t: "sine",
      f: 10,
      fm: 0.0,
      i: 1.0,
      g: decToLin(0),
      gm: 0.5,
      a: 0.136,
      d: 0.458,
      s: 0,
      r: 0.012
    },
    osc3 = {
      m: 1,
      t: "sine",
      f: 783,
      fm: 0.0,
      i: 0.0,
      g: decToLin(0),
      gm: 1.0,
      a: 0.002,
      d: 0.356,
      s: 0.0,
      r: 0.05
    },
    osc4 = {
      m: 1,
      t: "sine",
      f: 261,
      fm: 0.0,
      i: 0.0,
      g: decToLin(-24),
      gm: 1.0,
      a: 20.0,
      d: 0.115,
      s: 0.0,
      r: 0.05
    }
  ],
  global : {
    gtime: 8,
    transposition: 0,
    routing : [ 0, 1, 2, 2 ],
    durationFactor : 1.0,
    kick : 1,
    morseVal2 : 0.0
  },
  pitchEnv : {
    connections : [ 1, 1, 1, 0 ],
    ramp : [
      [48, 0.11],
      [-12, 0.02],
      [0, 0.1]
    ],
    semitones : -48
  }
}

// this holds all presets so that they can be interpolated between in some kind of order
presetList = [longTonesNoPitchEnv, // 0
              lowFmPre,
              lowFmPre,
              kickPre, 
              pre,
              pre,
              hiFmPre,
              silence, 
              lowFmPreOneOsc, 
              lowFmPreOneOsc,
              longTonesNoPitchEnv, // 0
              lowFmPre,
              silence,
              hiFmPre,
              testPre, 
              lowFmPre, 
              hiFmPre,
              pre,
              pre,
              longTonesNoPitchEnv,
              longTonesNoPitchEnv
              ];

/* ------------------------------
  oscillators
  ------------------------------ */

var BasicOsc = function() {
  this.osc = audioCtx.createOscillator();
  this.gn = audioCtx.createGain();
  this.osc.connect(this.gn);
  // console.log("connecting osc to gn");
  this.gainVal = 0.0;
}

function allFm (pre, _noteVol, _noteDuration, _time) {
  // console.log("_noteVol " + _noteVol);
  var mods = [];

  // create audioNodes as object
  for(var i = 0; i < pre.oscs.length; i++) {
    // mods[i].osc = audioCtx.createOscillator();
    // mods[i].gn = audioCtx.createGain();  
    mods[i] = new BasicOsc();
    // }
  }

  // set up frequency and gain
  for(var i = 0; i < pre.oscs.length; i++){
    mods[i].osc.type = pre.oscs[i].t;
    mods[i].osc.frequency.value = (pre.oscs[i].f * semiToHz(pre.global.transposition)) + (pre.oscs[i].f * ((morseVal2 + 1) * (pre.oscs[i].fm)));
    // console.log("switch expression: " + (oscPre.m ? modFactor : 1));
    //if this a modulator, multiply the gain by modFactor * frequency
    if(pre.oscs[i].m == 1) {
      // console.log(pre.global.morseVal2);
      mods[i].gainVal = pre.oscs[i].g * _noteVol * modFactor * pre.oscs[i].f * ((morseVal3 + 1) * (pre.oscs[i].gm + 1)); //(pre.oscs[i].fm; // * Math.random();  // + carrierFrequency;
      // this.gain.gain.value = oscPre.g * modFactor * oscPre.f;
    } else {
      mods[i].gainVal = pre.oscs[i].g * _noteVol;
    }
    // console.log("freq for mods " + i + " :: " + mods[i].osc.frequency.value);
    // console.log("gn for mods " + i + " :: " + mods[i].gn.gain.value);

    // testing with no ramps
    // mods[i].gn.gain.value = mods[i].gainVal;
  }

  //
    // pitch envelope
    if( typeof pre.pitchEnv !== 'undefined' ) {
      // console.log("pitchEnv is defined!");
      // console.log("connectionsLength: " + connectionsLength);

      for( var i = 0; i < pre.pitchEnv.connections.length; i++ ) {
        if(pre.pitchEnv.connections[i] == 1) {

          mods[i].osc.detune.setValueAtTime((pre.pitchEnv.semitones * 100), _time);

          var incTime = _time;
          for(var j = 0; j < pre.pitchEnv.ramp.length; j++) {
            incTime += pre.pitchEnv.ramp[j][1];
            // console.log("ramping to value: " + mods[i].osc.frequency.value * semiToHz(pre.pitchEnv.ramp[j][0]) + " at time:  " + incTime);
            mods[i].osc.detune.linearRampToValueAtTime((pre.pitchEnv.ramp[j][0] * 100), incTime);
          }
        }
      }
    }
    //

  // routing
  var routingLength = pre.global.routing.length;
  for(var i = 0; i < pre.oscs.length; i++) { // was routingLength
    if(pre.global.routing[i] == 0) {
      // mods[i].connectMod(destination);
      mods[i].gn.connect(destination);
      // console.log("connecting " + i + " to destination");
    }
    else {
      let targetOsc = pre.global.routing[i] - 1;
      mods[i].gn.connect(mods[targetOsc].osc.frequency);
      // just for testing
      // mods[i].gn.connect(destination);
      // console.log("connecting " + i + " to " + targetOsc );
    }
  }

  for(var i = 0; i < pre.oscs.length; i++) {  
    // console.log("pre.oscs.length: " + pre.oscs.length);
    // console.log("i: " + i);
    // console.log("current time: " + audioCtx.currentTime);
    // console.log("starting note at time: " + _time);
    mods[i].osc.start(_time);
    // envelope
    // initial
    mods[i].gn.gain.cancelScheduledValues(_time);
    mods[i].gn.gain.setValueAtTime(pre.oscs[i].i * mods[i].gainVal, _time);
    // mods[i].gn.gain.setValueAtTime(mods[i].gainVal, _time);
    // console.log("initial gain: " + pre.oscs[i].i * mods[i].gainVal);
    // attack
    mods[i].gn.gain.linearRampToValueAtTime(pre.oscs[i].g * mods[i].gainVal, _time + (pre.oscs[i].a * pre.global.gtime) );
    
    // console.log("attack gain: " + pre.oscs[i].g * mods[i].gainVal);
    // decay
    mods[i].gn.gain.linearRampToValueAtTime(pre.oscs[i].s * mods[i].gainVal, _time + (pre.oscs[i].a * pre.global.gtime) + (pre.oscs[i].d * pre.global.gtime) );
    // console.log("decay gain: " + pre.oscs[i].s * mods[i].gainVal);
    // sustain phase
    if(_noteDuration > (pre.oscs[i].a * pre.global.gtime) + (pre.oscs[i].d * pre.global.gtime) ) {
      mods[i].gn.gain.setValueAtTime(pre.oscs[i].g * mods[i].gainVal, _time + _noteDuration);

    } else {
      // if less than a + d then cut note short
      // fade out for release
      // cancel anything extra
      mods[i].gn.gain.cancelScheduledValues(_time + _noteDuration);
    }
    mods[i].gn.gain.linearRampToValueAtTime(0, _time + _noteDuration + (pre.oscs[i].r * pre.global.gtime) + 0.01); // little fade out

    mods[i].osc.stop((_time + _noteDuration + (pre.oscs[i].r * pre.global.gtime)));// + 0.01));
  }  
}

// ------------------------------------------------------

function init() {
  console.log("script loaded...");
  
  //load the AudioContext, allowing for webkit (Safari)
  try {
    window.AudioContext = window.AudioContext || window.webkitAudioContext;
    audioCtx = new AudioContext();
    // audioCtx.sampleRate = 44100;
  }
  //give an error if browser cannot use Web Audio API
  catch(e) {
    alert('Web Audio API is not supported in this browser');
  }

  // console.log(interpolate(lowFmPre, pre, 0.75));

  destination = audioCtx.createGain();
  destination.gain.value = decToLin(-6);

  lowCut = audioCtx.createBiquadFilter();
  lowCut.type = "highpass";
  lowCut.frequency.value = 80;
  destination.connect(lowCut);
  lowCut.connect(audioCtx.destination);

  text = getdata();
  // alert(text);
  obj = JSON.parse(text);

  /*!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
    Translate Data to Morse Tones
  !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! */

	buoyheights1 = getMinAndMaxValues(obj, buoys[0], height, datacount);  
	buoyheights2 = getMinAndMaxValues(obj, buoys[1], height, datacount);  
	buoyheights3 = getMinAndMaxValues(obj, buoys[2], height, datacount);  
	buoyheights4 = getMinAndMaxValues(obj, buoys[3], height, datacount);  

  // console.log("buoyheights");
  // console.log(buoyheights1.maxVal);
  // console.log(buoyheights1.minVal);
  

  var t = audioCtx.currentTime + 2;

  console.log("datacount: " + datacount);

  // currentPreset = interpolate(lowFmPre, pre, 0.1);
  calculatePreset();
  noteLength = 0.06 * currentPreset.global.durationFactor;

  translateToMorse(obj, buoys[0], height, datacount, 2000, 1); // 0.06
  // translateToMorse(obj, buoys[1], height, datacount, 1000, 0.08, 0.04);
  // translateToMorse(obj, buoys[2], height, datacount, 100, 0.08, 0.3);
  // translateToMorse(obj, buoys[3], height, datacount, 50, 0.4, 0.75);

  // refresh browser window, fade out just prior to
  // setTimeout(function() {
  //   console.log("reloading webpage in 15 seconds");
  //   destination.gain.linearRampToValueAtTime(0, audioCtx.currentTime + 10);

  //   setTimeout(function() { 
  //   location.reload(); 
  //   }, 15000); // reload 5 seconds after fade out
  // }, refreshTime); // refresh after some amount of time

  
  setInterval(calculatePreset, 1000 );

  setInterval( getMorse, 450 );
}

function getMorse () {
  var _this = obj[buoys[2]][morse2Index][height];
  var _prevthis = obj[buoys[2]][morse2Index-1][height];
  var dif = _this-_prevthis;

  morseVal3 = (map(dif, buoyheights3.minVal, buoyheights3.maxVal, -1.0, 1.0));
  // console.log("morseVal3: " + morseVal3);

  morse3Index++;
  if(morse3Index === datacount) {
    morse3Index = 1;
  }
}

// -----------------------------------------------------

function calculatePreset() {
  // Date.getHours()
  // Date.getMinutes()
  // presetIncrement++;
  // let incMax = 45;
  // if(presetIncrement > incMax) presetIncrement = 0;
  var d = new Date();
  var m = (d.getMinutes() % 20);
  // console.log("m: " + m);
  var s = d.getSeconds();
  let r = map(s, 0, 60, 0, 1)

  // currentPreset = interpolate(lowFmPre, lowFmPreOneOsc, r);
  // currentPreset = interpolate(presetList[pi-1], presetList[pi], r);
  currentPreset = interpolate(presetList[m], presetList[m+1], r);
  // console.log("pi: " + pi);
  // console.log("pi-1: " + (pi-1));
  // console.log("seconds: " + s);
  // console.log("presetIncrement: " + presetIncrement);
  // console.log("r: " + r);
  // console.log("currentPreset.global.durationFactor: " + currentPreset.global.durationFactor);

  var _this = obj[buoys[1]][morse2Index][height];
  var _prevthis = obj[buoys[1]][morse2Index-1][height];
  var dif = _this-_prevthis;
  
  morseVal2 = (map(dif, buoyheights2.minVal, buoyheights2.maxVal, -1.0, 1.0));
  // console.log("morseVal2: " + morseVal2);
  // currentPreset.global.morseVal2 = morseVal2;
  // console.log("currentPreset.global.morseVal2: " + currentPreset.global.morseVal2);

  // if(s === 59) pi++;
  // if(presetIncrement === incMax) pi++;
  // if(pi === presetList.length) pi = 1;
  // console.log("presetList.length: " + presetList.length);

  morse2Index++;
  if(morse2Index === datacount) {
    morse2Index = 1;
  }

  // console.log("durationFactor: " + currentPreset.global.durationFactor);
}

// ------------------------------------------------------

// listen for keypress
document.addEventListener("keydown", function(event) {
  // console.log(event.which);
  if (event.which === 32) {

    // console.log("noteLength: " + noteLength);
    // allFm(currentPreset, 0.8, noteLength, audioCtx.currentTime + 0.1);
    // console.log(currentPreset);

    if(audioCtx.isSuspended === false){
    	audioCtx.suspend();
    } else {
    	audioCtx.resume();
    }
    	

  } else if (event.which === 82) { // 'r' key
    console.log("restarting the audio context!")
    audioCtx.close();
    setTimeout(init(), 1000);

  } 
  // else if (event.which === 65) {
    // if(seq) seq = false;
    // else seq = true;
    // console.log("seq toggled to: " + seq);

  // } else if (event.which === 78) { // n key
    // allFm(pre, 0.8, 5, audioCtx.currentTime + 0.1);

  // } else if (event.which === 77) {
    // allFm(testPre, 0.8, 0.3, audioCtx.currentTime + 0.1);

  // } else if (event.which === 71) {
    // getData();
    // console.log("newData: " + newData);
    // allFm(hiFmPre, 0.8, 0.5, audioCtx.currentTime + 0.1);
    // allFm(kickPre, 0.9, 0.5, audioCtx.currentTime + 0.1);
    // console.log("note created");
  // } 
    // }
});

// values for attack, decay, sustain, release, cannot be 0!!!! but can be very small

// function to convert to decibels
function linToDec (linearLevel) {
  return 10 * log10( linearLevel );
}

function decToLin (decibelLevel) {
  return Math.pow(10, ( decibelLevel/10 ));
}

function log10(x) {
  return Math.log(x)/Math.LN10;
}

function semiToHz(semitone) {
  // console.log(semitone);
  return Math.pow( 2, semitone / 12);
}

function interpolate(p1, p2, r) {
  var newPreset = {
    oscs : [
      osc1 = {
        t: "sine"
      },
      osc2 = {
        t: "sine"
      },
      osc3 = {
        t: "sine"
      },
      osc4 = {
        t: "sine"
      }
    ],
    global : {
      gtime : 0.5, // 8 is equivalent to +100% in operator
      transposition : 13,
      routing : [ 0, 1, 2, 3 ],
      durationFactor : 1,
      kick : 1,
      morseVal2 : 0
    },
    pitchEnv : {
      connections : [ 0, 0, 0, 0 ],
      ramp : [
        [-24, 0.01],
        [1, 3.83],
        [0, 0.1]
      ],
      semitones : 24
    }
  }
  for(var i = 0; i < p1.oscs.length; i++) {
    // for(var j = 0; j < p1.oscs[i].length; j++) {

      newPreset.oscs[i].m = r <= 0.5 ? p1.oscs[i].m : p2.oscs[i].m;
      newPreset.oscs[i].f = p1.oscs[i].f + ((p2.oscs[i].f - p1.oscs[i].f) * r);
      newPreset.oscs[i].fm = p1.oscs[i].fm + ((p2.oscs[i].fm - p1.oscs[i].fm) * r);
      newPreset.oscs[i].g = p1.oscs[i].g + ((p2.oscs[i].g - p1.oscs[i].g) * r);
      newPreset.oscs[i].gm = p1.oscs[i].gm + ((p2.oscs[i].gm - p1.oscs[i].gm) * r);
      newPreset.oscs[i].i = p1.oscs[i].i + ((p2.oscs[i].i - p1.oscs[i].i) * r);
      newPreset.oscs[i].a = p1.oscs[i].a + ((p2.oscs[i].a - p1.oscs[i].a) * r);
      newPreset.oscs[i].d = p1.oscs[i].d + ((p2.oscs[i].d - p1.oscs[i].d) * r);
      newPreset.oscs[i].s = p1.oscs[i].s + ((p2.oscs[i].s - p1.oscs[i].s) * r);
      newPreset.oscs[i].r = p1.oscs[i].r + ((p2.oscs[i].r - p1.oscs[i].r) * r);
    // }
  }

  newPreset.global.gtime = p1.global.gtime + ((p2.global.gtime - p1.global.gtime) * r);
  newPreset.global.transposition = p1.global.transposition + ((p2.global.transposition - p1.global.transposition) * r);
  newPreset.global.durationFactor = p1.global.durationFactor + ((p2.global.durationFactor - p1.global.durationFactor) * r); //Math.pow(r, 2));
  // console.log(Math.pow(r, 20));
  // console.log(400 * Math.pow(0.01, 20));
  newPreset.global.kick = r <= 0.5 ? p1.global.kick : p2.global.kick;
  
  for(var i = 0; i < 4; i++) {
    newPreset.global.routing[i] = r <= 0.5 ? p1.global.routing[i] : p2.global.routing[i];
    newPreset.pitchEnv.connections[i] = r <= 0.5 ? p1.pitchEnv.connections[i] : p2.pitchEnv.connections[i];
  }
  newPreset.pitchEnv.semitones = p1.pitchEnv.semitones + ((p2.pitchEnv.semitones - p1.pitchEnv.semitones) * r);
  for(var i = 0; i < 3; i++) {
    for(var j = 0; j < 2; j++) {
      newPreset.pitchEnv.ramp[i][j] = p1.pitchEnv.ramp[i][j] + ((p2.pitchEnv.ramp[i][j] - p1.pitchEnv.ramp[i][j]) * r);
    }
  }

  // console.log("newPreset.oscs[i].f: " + newPreset.oscs[0].f);
  return newPreset;
}

// -----------------------------------------------------
// devon's morse code below here
// -----------------------------------------------------

/* =================================================
Translate to Morse
================================================== */

function translateToMorse(objectname, buoyid, prop, length, f, v) {
    
  setInterval(function () {
    // if the note sequencing time falls behind the currentTime then push it ahead a bit
    if( audioCtx.currentTime + scheduleTime >= t ) {

      // console.log("currentTime: " + audioCtx.currentTime);
      var dot = noteLength;
      let dash = 3.3*dot;

      // console.log("i#"+ i);
      let _this = objectname[buoyid][index][prop];
      let _prevthis = objectname[buoyid][index-1][prop];
      let dif = _this-_prevthis;

      // buoyheights = getMinAndMaxValues(obj, buoys[0], height, datacount);

      let morseVal = Math.floor(map(dif, buoyheights1.minVal, buoyheights1.maxVal, 1, 36));

      //console.log("Morse Val: " + morseVal);
      let morseCode = morse[numbers][0][morseVal];  
      // console.log("Code: " + morseCode);
      //console.log(morseCode.charAt(0));
      
      let morseCodeLength = morseCode.length;
      //console.log("Code Length: " + morseCodeLength);
      //console.log("id: " + i + ", Height Differential: " + dif + ", Code: " + morseVal);
      // console.log(morseCode + " : " + morseCodeLength);
      var z = 0;
      // console.log("morseCode print: " + morseCode);

      let translate = function() {
        //console.log("/nindex: " + z + "\nchar: " + morseCode.charAt(z) + "\ntime: " + t);
        // console.log("morseCode.charAt(z): " + morseCode.charAt(z));

        // var deltaT = 0;
        noteLength = 0.06 * currentPreset.global.durationFactor;

        switch( morseCode.charAt(z) ) 
        {
          case '.': 
            // gainNode.gain.setTargetAtTime(gain, t, 0.01);
          

            if(seq){
              // simpleOsc(t, dot, lowFmPre, 0.8);
              // simpleOsc(t, dot, lowFmPre, 0.8);

              // singleOsc(v, f, dot, t);

              // fmx4(lowFmPre, 0.5, dot, t);
              // fm(osc1, gn1, 0, lowFmPre.oscs[0], lowFmPre.global, 0.5, dot, t);
              // fm(osc2, gn2, 1, lowFmPre.oscs[1], lowFmPre.global, 0.5, dot, t);
              // fm(osc3, gn3, 2, lowFmPre.oscs[2], lowFmPre.global, 0.5, dot, t);
              // fm(osc4, gn4, 3, lowFmPre.oscs[3], lowFmPre.global, 0.5, dot, t);
        
              allFm(currentPreset, 0.7, dot, t);
              // console.log("dot: " + dot);
              // allFm(lowFmPre, 0.8, dot, t);
              // allFm(lowFmPre, 0.8, dot, t);
              // allFm(lowFmPre, 0.8, dot, t);
              if(currentPreset.global.kick == 1)
                allFm(kickPre, 0.9, dot, t)
            }
  
            // makeFmSynth(lowFmPre, 1, dot, t);
            // makeFmSynth(lowFmPre, 1, dot, t);
            // makeFmSynth(pre, 0.8, dot * 10, t);
          
            // console.log("dot: " + dot);
            // console.log("making fm synth with time: " + t);
            // function makeFmSynth (_pre, _noteVol, _noteDuration, _time) {
            t += dot;
            // deltaT += dot;
            // gainNode.gain.setTargetAtTime(0.0, t, 0.01);
            break;
          case '-':

            if(seq) {

              // simpleOsc(t, dash, lowFmPre, 0.8);
              // simpleOsc(t, dash, lowFmPre, 0.8);

              // singleOsc(v, f, dash, t);

              // fmx4(lowFmPre, 0.5, dash, t);
              // fm(osc1, gn1, 0, lowFmPre.oscs[0], lowFmPre.global, 0.5, dash, t);
              // fm(osc2, gn2, 1, lowFmPre.oscs[1], lowFmPre.global, 0.5, dash, t);
              // fm(osc3, gn3, 2, lowFmPre.oscs[2], lowFmPre.global, 0.5, dash, t);
              // fm(osc4, gn4, 3, lowFmPre.oscs[3], lowFmPre.global, 0.5, dash, t);

              // console.log("currentPreset.global.morseVal2: " + currentPreset.global.morseVal2);

              allFm(currentPreset, 0.7, dash, t);
              // allFm(lowFmPre, 0.8, dash, t);
              // allFm(lowFmPre, 0.8, dash, t);
              // allFm(lowFmPre, 0.8, dash, t);
              if(currentPreset.global.kick == 1)
                allFm(kickPre, 0.9, dash, t)

            }

            // makeFmSynth(lowFmPre, 1, dash, t);
            // makeFmSynth(lowFmPre, 1, dash, t);
            // makeFmSynth(pre, 0.8, dash * 10, t);
          
            // console.log("making fm synth with time: " + t);
            // gainNode.gain.setTargetAtTime(gain, t, 0.01);
            t += dash;
            // deltaT += dash;
            // gainNode.gain.setTargetAtTime(0.0, t, 0.01);
            break;
        }
        t += dot;
        // deltaT += dot;
        z++;
        // console.log("z: " + z);
        // console.log("morseCodeLength: " + morseCodeLength);
        if ( z < morseCodeLength ) {
          // setTimeout(translate(), deltaT);
          translate();
          // console.log("translating");
        }          
      };
      
      // console.log("calling translate the first time");
      // while(z < morseCodeLength) {
      //   setTimeout(translate(), 500);
      // }
      translate();
      
      // console.log("i should be incremented here");
      // i++;

      index++;

      // console.log("index: " + index);
      // console.log("length: " + length);
      if ( index === length ) {
        index = 1;
        // console.log("END OF DATA -- CYCLING");
      }
    }
  }, lookahead); // End setTimeout
}




/* =================================================
function to get max and min wave height from object
================================================== */
  
function getMinAndMaxValues(objectname, buoyid, prop, length) {
  for (var i=1; i< length; i++) {
    var _this = objectname[buoyid][i][prop];
    var _prevthis = objectname[buoyid][i-1][prop];
    dif = _this-_prevthis;
     absDif = Math.abs(dif);
     sumDif += absDif;
     avgDif = sumDif/(length-1);
    if (dif >= maxVal)
    {
      maxVal = dif;    
    }
    if (dif <= minVal)
    {
      minVal =dif;
    }
    
    // console.log("\nIndex:" + i +"\nCurrent Water Level: " + _this + "\nPrevious Water Level: "+ _prevthis + "\nRaw Difference: " + dif + "\nAbsolute Dif: "+ absDif +"Running Total: " + sumDif + "\nDataCount: " + datacount+"\n**************\nMaxValue: " + maxVal+"\nMinValue: "+minVal + "\nAverageValue:" + avgDif); 
        
  }

  returnedObject = {};
  returnedObject.maxVal = maxVal;
  returnedObject.minVal = minVal;
  return returnedObject;
}

/* =================================================
    Remap value to new value range
================================================== */
function map(value, in_min, in_max, out_min, out_max) {
  return (value - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;
}

window.addEventListener("load", init );

// $(document).ready(function(){